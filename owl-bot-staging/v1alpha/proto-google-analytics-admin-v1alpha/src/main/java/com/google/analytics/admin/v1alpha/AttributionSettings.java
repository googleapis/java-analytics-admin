// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/analytics/admin/v1alpha/resources.proto

package com.google.analytics.admin.v1alpha;

/**
 * <pre>
 * The attribution settings used for a given property. This is a singleton
 * resource.
 * </pre>
 *
 * Protobuf type {@code google.analytics.admin.v1alpha.AttributionSettings}
 */
public final class AttributionSettings extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.analytics.admin.v1alpha.AttributionSettings)
    AttributionSettingsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AttributionSettings.newBuilder() to construct.
  private AttributionSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AttributionSettings() {
    name_ = "";
    acquisitionConversionEventLookbackWindow_ = 0;
    otherConversionEventLookbackWindow_ = 0;
    reportingAttributionModel_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new AttributionSettings();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private AttributionSettings(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            name_ = s;
            break;
          }
          case 16: {
            int rawValue = input.readEnum();

            acquisitionConversionEventLookbackWindow_ = rawValue;
            break;
          }
          case 24: {
            int rawValue = input.readEnum();

            otherConversionEventLookbackWindow_ = rawValue;
            break;
          }
          case 32: {
            int rawValue = input.readEnum();

            reportingAttributionModel_ = rawValue;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.analytics.admin.v1alpha.ResourcesProto.internal_static_google_analytics_admin_v1alpha_AttributionSettings_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.analytics.admin.v1alpha.ResourcesProto.internal_static_google_analytics_admin_v1alpha_AttributionSettings_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.analytics.admin.v1alpha.AttributionSettings.class, com.google.analytics.admin.v1alpha.AttributionSettings.Builder.class);
  }

  /**
   * <pre>
   * How far back in time events should be considered for inclusion in a
   * converting path which leads to the first install of an app or the first
   * visit to a site.
   * </pre>
   *
   * Protobuf enum {@code google.analytics.admin.v1alpha.AttributionSettings.AcquisitionConversionEventLookbackWindow}
   */
  public enum AcquisitionConversionEventLookbackWindow
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Lookback window size unspecified.
     * </pre>
     *
     * <code>ACQUISITION_CONVERSION_EVENT_LOOKBACK_WINDOW_UNSPECIFIED = 0;</code>
     */
    ACQUISITION_CONVERSION_EVENT_LOOKBACK_WINDOW_UNSPECIFIED(0),
    /**
     * <pre>
     * 7-day lookback window.
     * </pre>
     *
     * <code>ACQUISITION_CONVERSION_EVENT_LOOKBACK_WINDOW_7_DAYS = 1;</code>
     */
    ACQUISITION_CONVERSION_EVENT_LOOKBACK_WINDOW_7_DAYS(1),
    /**
     * <pre>
     * 30-day lookback window.
     * </pre>
     *
     * <code>ACQUISITION_CONVERSION_EVENT_LOOKBACK_WINDOW_30_DAYS = 2;</code>
     */
    ACQUISITION_CONVERSION_EVENT_LOOKBACK_WINDOW_30_DAYS(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Lookback window size unspecified.
     * </pre>
     *
     * <code>ACQUISITION_CONVERSION_EVENT_LOOKBACK_WINDOW_UNSPECIFIED = 0;</code>
     */
    public static final int ACQUISITION_CONVERSION_EVENT_LOOKBACK_WINDOW_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * 7-day lookback window.
     * </pre>
     *
     * <code>ACQUISITION_CONVERSION_EVENT_LOOKBACK_WINDOW_7_DAYS = 1;</code>
     */
    public static final int ACQUISITION_CONVERSION_EVENT_LOOKBACK_WINDOW_7_DAYS_VALUE = 1;
    /**
     * <pre>
     * 30-day lookback window.
     * </pre>
     *
     * <code>ACQUISITION_CONVERSION_EVENT_LOOKBACK_WINDOW_30_DAYS = 2;</code>
     */
    public static final int ACQUISITION_CONVERSION_EVENT_LOOKBACK_WINDOW_30_DAYS_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AcquisitionConversionEventLookbackWindow valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AcquisitionConversionEventLookbackWindow forNumber(int value) {
      switch (value) {
        case 0: return ACQUISITION_CONVERSION_EVENT_LOOKBACK_WINDOW_UNSPECIFIED;
        case 1: return ACQUISITION_CONVERSION_EVENT_LOOKBACK_WINDOW_7_DAYS;
        case 2: return ACQUISITION_CONVERSION_EVENT_LOOKBACK_WINDOW_30_DAYS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AcquisitionConversionEventLookbackWindow>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AcquisitionConversionEventLookbackWindow> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AcquisitionConversionEventLookbackWindow>() {
            public AcquisitionConversionEventLookbackWindow findValueByNumber(int number) {
              return AcquisitionConversionEventLookbackWindow.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.analytics.admin.v1alpha.AttributionSettings.getDescriptor().getEnumTypes().get(0);
    }

    private static final AcquisitionConversionEventLookbackWindow[] VALUES = values();

    public static AcquisitionConversionEventLookbackWindow valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AcquisitionConversionEventLookbackWindow(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.analytics.admin.v1alpha.AttributionSettings.AcquisitionConversionEventLookbackWindow)
  }

  /**
   * <pre>
   * How far back in time events should be considered for inclusion in a
   * converting path for all conversions other than first app install/first site
   * visit.
   * </pre>
   *
   * Protobuf enum {@code google.analytics.admin.v1alpha.AttributionSettings.OtherConversionEventLookbackWindow}
   */
  public enum OtherConversionEventLookbackWindow
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Lookback window size unspecified.
     * </pre>
     *
     * <code>OTHER_CONVERSION_EVENT_LOOKBACK_WINDOW_UNSPECIFIED = 0;</code>
     */
    OTHER_CONVERSION_EVENT_LOOKBACK_WINDOW_UNSPECIFIED(0),
    /**
     * <pre>
     * 30-day lookback window.
     * </pre>
     *
     * <code>OTHER_CONVERSION_EVENT_LOOKBACK_WINDOW_30_DAYS = 1;</code>
     */
    OTHER_CONVERSION_EVENT_LOOKBACK_WINDOW_30_DAYS(1),
    /**
     * <pre>
     * 60-day lookback window.
     * </pre>
     *
     * <code>OTHER_CONVERSION_EVENT_LOOKBACK_WINDOW_60_DAYS = 2;</code>
     */
    OTHER_CONVERSION_EVENT_LOOKBACK_WINDOW_60_DAYS(2),
    /**
     * <pre>
     * 90-day lookback window.
     * </pre>
     *
     * <code>OTHER_CONVERSION_EVENT_LOOKBACK_WINDOW_90_DAYS = 3;</code>
     */
    OTHER_CONVERSION_EVENT_LOOKBACK_WINDOW_90_DAYS(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Lookback window size unspecified.
     * </pre>
     *
     * <code>OTHER_CONVERSION_EVENT_LOOKBACK_WINDOW_UNSPECIFIED = 0;</code>
     */
    public static final int OTHER_CONVERSION_EVENT_LOOKBACK_WINDOW_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * 30-day lookback window.
     * </pre>
     *
     * <code>OTHER_CONVERSION_EVENT_LOOKBACK_WINDOW_30_DAYS = 1;</code>
     */
    public static final int OTHER_CONVERSION_EVENT_LOOKBACK_WINDOW_30_DAYS_VALUE = 1;
    /**
     * <pre>
     * 60-day lookback window.
     * </pre>
     *
     * <code>OTHER_CONVERSION_EVENT_LOOKBACK_WINDOW_60_DAYS = 2;</code>
     */
    public static final int OTHER_CONVERSION_EVENT_LOOKBACK_WINDOW_60_DAYS_VALUE = 2;
    /**
     * <pre>
     * 90-day lookback window.
     * </pre>
     *
     * <code>OTHER_CONVERSION_EVENT_LOOKBACK_WINDOW_90_DAYS = 3;</code>
     */
    public static final int OTHER_CONVERSION_EVENT_LOOKBACK_WINDOW_90_DAYS_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static OtherConversionEventLookbackWindow valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static OtherConversionEventLookbackWindow forNumber(int value) {
      switch (value) {
        case 0: return OTHER_CONVERSION_EVENT_LOOKBACK_WINDOW_UNSPECIFIED;
        case 1: return OTHER_CONVERSION_EVENT_LOOKBACK_WINDOW_30_DAYS;
        case 2: return OTHER_CONVERSION_EVENT_LOOKBACK_WINDOW_60_DAYS;
        case 3: return OTHER_CONVERSION_EVENT_LOOKBACK_WINDOW_90_DAYS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OtherConversionEventLookbackWindow>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        OtherConversionEventLookbackWindow> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OtherConversionEventLookbackWindow>() {
            public OtherConversionEventLookbackWindow findValueByNumber(int number) {
              return OtherConversionEventLookbackWindow.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.analytics.admin.v1alpha.AttributionSettings.getDescriptor().getEnumTypes().get(1);
    }

    private static final OtherConversionEventLookbackWindow[] VALUES = values();

    public static OtherConversionEventLookbackWindow valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private OtherConversionEventLookbackWindow(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.analytics.admin.v1alpha.AttributionSettings.OtherConversionEventLookbackWindow)
  }

  /**
   * <pre>
   * The reporting attribution model used to calculate conversion credit in this
   * property's reports.
   * </pre>
   *
   * Protobuf enum {@code google.analytics.admin.v1alpha.AttributionSettings.ReportingAttributionModel}
   */
  public enum ReportingAttributionModel
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Reporting attribution model unspecified.
     * </pre>
     *
     * <code>REPORTING_ATTRIBUTION_MODEL_UNSPECIFIED = 0;</code>
     */
    REPORTING_ATTRIBUTION_MODEL_UNSPECIFIED(0),
    /**
     * <pre>
     * Data-driven attribution distributes credit for the conversion based on
     * data for each conversion event. Each Data-driven model is specific to
     * each advertiser and each conversion event.
     * </pre>
     *
     * <code>CROSS_CHANNEL_DATA_DRIVEN = 1;</code>
     */
    CROSS_CHANNEL_DATA_DRIVEN(1),
    /**
     * <pre>
     * Ignores direct traffic and attributes 100% of the conversion value to the
     * last channel that the customer clicked through (or engaged view through
     * for YouTube) before converting.
     * </pre>
     *
     * <code>CROSS_CHANNEL_LAST_CLICK = 2;</code>
     */
    CROSS_CHANNEL_LAST_CLICK(2),
    /**
     * <pre>
     * Gives all credit for the conversion to the first channel that a customer
     * clicked (or engaged view through for YouTube) before converting.
     * </pre>
     *
     * <code>CROSS_CHANNEL_FIRST_CLICK = 3;</code>
     */
    CROSS_CHANNEL_FIRST_CLICK(3),
    /**
     * <pre>
     * Distributes the credit for the conversion equally across all the channels
     * a customer clicked (or engaged view through for YouTube) before
     * converting.
     * </pre>
     *
     * <code>CROSS_CHANNEL_LINEAR = 4;</code>
     */
    CROSS_CHANNEL_LINEAR(4),
    /**
     * <pre>
     * Attributes 40% credit to the first and last interaction, and the
     * remaining 20% credit is distributed evenly to the middle interactions.
     * </pre>
     *
     * <code>CROSS_CHANNEL_POSITION_BASED = 5;</code>
     */
    CROSS_CHANNEL_POSITION_BASED(5),
    /**
     * <pre>
     * Gives more credit to the touchpoints that happened closer in time to
     * the conversion.
     * </pre>
     *
     * <code>CROSS_CHANNEL_TIME_DECAY = 6;</code>
     */
    CROSS_CHANNEL_TIME_DECAY(6),
    /**
     * <pre>
     * Attributes 100% of the conversion value to the last Google Ads channel
     * that the customer clicked through before converting.
     * </pre>
     *
     * <code>ADS_PREFERRED_LAST_CLICK = 7;</code>
     */
    ADS_PREFERRED_LAST_CLICK(7),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Reporting attribution model unspecified.
     * </pre>
     *
     * <code>REPORTING_ATTRIBUTION_MODEL_UNSPECIFIED = 0;</code>
     */
    public static final int REPORTING_ATTRIBUTION_MODEL_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * Data-driven attribution distributes credit for the conversion based on
     * data for each conversion event. Each Data-driven model is specific to
     * each advertiser and each conversion event.
     * </pre>
     *
     * <code>CROSS_CHANNEL_DATA_DRIVEN = 1;</code>
     */
    public static final int CROSS_CHANNEL_DATA_DRIVEN_VALUE = 1;
    /**
     * <pre>
     * Ignores direct traffic and attributes 100% of the conversion value to the
     * last channel that the customer clicked through (or engaged view through
     * for YouTube) before converting.
     * </pre>
     *
     * <code>CROSS_CHANNEL_LAST_CLICK = 2;</code>
     */
    public static final int CROSS_CHANNEL_LAST_CLICK_VALUE = 2;
    /**
     * <pre>
     * Gives all credit for the conversion to the first channel that a customer
     * clicked (or engaged view through for YouTube) before converting.
     * </pre>
     *
     * <code>CROSS_CHANNEL_FIRST_CLICK = 3;</code>
     */
    public static final int CROSS_CHANNEL_FIRST_CLICK_VALUE = 3;
    /**
     * <pre>
     * Distributes the credit for the conversion equally across all the channels
     * a customer clicked (or engaged view through for YouTube) before
     * converting.
     * </pre>
     *
     * <code>CROSS_CHANNEL_LINEAR = 4;</code>
     */
    public static final int CROSS_CHANNEL_LINEAR_VALUE = 4;
    /**
     * <pre>
     * Attributes 40% credit to the first and last interaction, and the
     * remaining 20% credit is distributed evenly to the middle interactions.
     * </pre>
     *
     * <code>CROSS_CHANNEL_POSITION_BASED = 5;</code>
     */
    public static final int CROSS_CHANNEL_POSITION_BASED_VALUE = 5;
    /**
     * <pre>
     * Gives more credit to the touchpoints that happened closer in time to
     * the conversion.
     * </pre>
     *
     * <code>CROSS_CHANNEL_TIME_DECAY = 6;</code>
     */
    public static final int CROSS_CHANNEL_TIME_DECAY_VALUE = 6;
    /**
     * <pre>
     * Attributes 100% of the conversion value to the last Google Ads channel
     * that the customer clicked through before converting.
     * </pre>
     *
     * <code>ADS_PREFERRED_LAST_CLICK = 7;</code>
     */
    public static final int ADS_PREFERRED_LAST_CLICK_VALUE = 7;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ReportingAttributionModel valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ReportingAttributionModel forNumber(int value) {
      switch (value) {
        case 0: return REPORTING_ATTRIBUTION_MODEL_UNSPECIFIED;
        case 1: return CROSS_CHANNEL_DATA_DRIVEN;
        case 2: return CROSS_CHANNEL_LAST_CLICK;
        case 3: return CROSS_CHANNEL_FIRST_CLICK;
        case 4: return CROSS_CHANNEL_LINEAR;
        case 5: return CROSS_CHANNEL_POSITION_BASED;
        case 6: return CROSS_CHANNEL_TIME_DECAY;
        case 7: return ADS_PREFERRED_LAST_CLICK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ReportingAttributionModel>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ReportingAttributionModel> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ReportingAttributionModel>() {
            public ReportingAttributionModel findValueByNumber(int number) {
              return ReportingAttributionModel.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.analytics.admin.v1alpha.AttributionSettings.getDescriptor().getEnumTypes().get(2);
    }

    private static final ReportingAttributionModel[] VALUES = values();

    public static ReportingAttributionModel valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ReportingAttributionModel(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.analytics.admin.v1alpha.AttributionSettings.ReportingAttributionModel)
  }

  public static final int NAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object name_;
  /**
   * <pre>
   * Output only. Resource name of this attribution settings resource.
   * Format: properties/{property_id}/attributionSettings
   * Example: "properties/1000/attributionSettings"
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Output only. Resource name of this attribution settings resource.
   * Format: properties/{property_id}/attributionSettings
   * Example: "properties/1000/attributionSettings"
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ACQUISITION_CONVERSION_EVENT_LOOKBACK_WINDOW_FIELD_NUMBER = 2;
  private int acquisitionConversionEventLookbackWindow_;
  /**
   * <pre>
   * Required. The lookback window configuration for acquisition conversion events.
   * The default window size is 30 days.
   * </pre>
   *
   * <code>.google.analytics.admin.v1alpha.AttributionSettings.AcquisitionConversionEventLookbackWindow acquisition_conversion_event_lookback_window = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The enum numeric value on the wire for acquisitionConversionEventLookbackWindow.
   */
  @java.lang.Override public int getAcquisitionConversionEventLookbackWindowValue() {
    return acquisitionConversionEventLookbackWindow_;
  }
  /**
   * <pre>
   * Required. The lookback window configuration for acquisition conversion events.
   * The default window size is 30 days.
   * </pre>
   *
   * <code>.google.analytics.admin.v1alpha.AttributionSettings.AcquisitionConversionEventLookbackWindow acquisition_conversion_event_lookback_window = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The acquisitionConversionEventLookbackWindow.
   */
  @java.lang.Override public com.google.analytics.admin.v1alpha.AttributionSettings.AcquisitionConversionEventLookbackWindow getAcquisitionConversionEventLookbackWindow() {
    @SuppressWarnings("deprecation")
    com.google.analytics.admin.v1alpha.AttributionSettings.AcquisitionConversionEventLookbackWindow result = com.google.analytics.admin.v1alpha.AttributionSettings.AcquisitionConversionEventLookbackWindow.valueOf(acquisitionConversionEventLookbackWindow_);
    return result == null ? com.google.analytics.admin.v1alpha.AttributionSettings.AcquisitionConversionEventLookbackWindow.UNRECOGNIZED : result;
  }

  public static final int OTHER_CONVERSION_EVENT_LOOKBACK_WINDOW_FIELD_NUMBER = 3;
  private int otherConversionEventLookbackWindow_;
  /**
   * <pre>
   * Required. The lookback window for all other, non-acquisition conversion events.
   * The default window size is 90 days.
   * </pre>
   *
   * <code>.google.analytics.admin.v1alpha.AttributionSettings.OtherConversionEventLookbackWindow other_conversion_event_lookback_window = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The enum numeric value on the wire for otherConversionEventLookbackWindow.
   */
  @java.lang.Override public int getOtherConversionEventLookbackWindowValue() {
    return otherConversionEventLookbackWindow_;
  }
  /**
   * <pre>
   * Required. The lookback window for all other, non-acquisition conversion events.
   * The default window size is 90 days.
   * </pre>
   *
   * <code>.google.analytics.admin.v1alpha.AttributionSettings.OtherConversionEventLookbackWindow other_conversion_event_lookback_window = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The otherConversionEventLookbackWindow.
   */
  @java.lang.Override public com.google.analytics.admin.v1alpha.AttributionSettings.OtherConversionEventLookbackWindow getOtherConversionEventLookbackWindow() {
    @SuppressWarnings("deprecation")
    com.google.analytics.admin.v1alpha.AttributionSettings.OtherConversionEventLookbackWindow result = com.google.analytics.admin.v1alpha.AttributionSettings.OtherConversionEventLookbackWindow.valueOf(otherConversionEventLookbackWindow_);
    return result == null ? com.google.analytics.admin.v1alpha.AttributionSettings.OtherConversionEventLookbackWindow.UNRECOGNIZED : result;
  }

  public static final int REPORTING_ATTRIBUTION_MODEL_FIELD_NUMBER = 4;
  private int reportingAttributionModel_;
  /**
   * <pre>
   * Required. The reporting attribution model used to calculate conversion credit in this
   * property's reports.
   * Changing the attribution model will apply to both historical and future
   * data. These changes will be reflected in reports with conversion and
   * revenue data. User and session data will be unaffected.
   * </pre>
   *
   * <code>.google.analytics.admin.v1alpha.AttributionSettings.ReportingAttributionModel reporting_attribution_model = 4 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The enum numeric value on the wire for reportingAttributionModel.
   */
  @java.lang.Override public int getReportingAttributionModelValue() {
    return reportingAttributionModel_;
  }
  /**
   * <pre>
   * Required. The reporting attribution model used to calculate conversion credit in this
   * property's reports.
   * Changing the attribution model will apply to both historical and future
   * data. These changes will be reflected in reports with conversion and
   * revenue data. User and session data will be unaffected.
   * </pre>
   *
   * <code>.google.analytics.admin.v1alpha.AttributionSettings.ReportingAttributionModel reporting_attribution_model = 4 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The reportingAttributionModel.
   */
  @java.lang.Override public com.google.analytics.admin.v1alpha.AttributionSettings.ReportingAttributionModel getReportingAttributionModel() {
    @SuppressWarnings("deprecation")
    com.google.analytics.admin.v1alpha.AttributionSettings.ReportingAttributionModel result = com.google.analytics.admin.v1alpha.AttributionSettings.ReportingAttributionModel.valueOf(reportingAttributionModel_);
    return result == null ? com.google.analytics.admin.v1alpha.AttributionSettings.ReportingAttributionModel.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    if (acquisitionConversionEventLookbackWindow_ != com.google.analytics.admin.v1alpha.AttributionSettings.AcquisitionConversionEventLookbackWindow.ACQUISITION_CONVERSION_EVENT_LOOKBACK_WINDOW_UNSPECIFIED.getNumber()) {
      output.writeEnum(2, acquisitionConversionEventLookbackWindow_);
    }
    if (otherConversionEventLookbackWindow_ != com.google.analytics.admin.v1alpha.AttributionSettings.OtherConversionEventLookbackWindow.OTHER_CONVERSION_EVENT_LOOKBACK_WINDOW_UNSPECIFIED.getNumber()) {
      output.writeEnum(3, otherConversionEventLookbackWindow_);
    }
    if (reportingAttributionModel_ != com.google.analytics.admin.v1alpha.AttributionSettings.ReportingAttributionModel.REPORTING_ATTRIBUTION_MODEL_UNSPECIFIED.getNumber()) {
      output.writeEnum(4, reportingAttributionModel_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    if (acquisitionConversionEventLookbackWindow_ != com.google.analytics.admin.v1alpha.AttributionSettings.AcquisitionConversionEventLookbackWindow.ACQUISITION_CONVERSION_EVENT_LOOKBACK_WINDOW_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, acquisitionConversionEventLookbackWindow_);
    }
    if (otherConversionEventLookbackWindow_ != com.google.analytics.admin.v1alpha.AttributionSettings.OtherConversionEventLookbackWindow.OTHER_CONVERSION_EVENT_LOOKBACK_WINDOW_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, otherConversionEventLookbackWindow_);
    }
    if (reportingAttributionModel_ != com.google.analytics.admin.v1alpha.AttributionSettings.ReportingAttributionModel.REPORTING_ATTRIBUTION_MODEL_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, reportingAttributionModel_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.analytics.admin.v1alpha.AttributionSettings)) {
      return super.equals(obj);
    }
    com.google.analytics.admin.v1alpha.AttributionSettings other = (com.google.analytics.admin.v1alpha.AttributionSettings) obj;

    if (!getName()
        .equals(other.getName())) return false;
    if (acquisitionConversionEventLookbackWindow_ != other.acquisitionConversionEventLookbackWindow_) return false;
    if (otherConversionEventLookbackWindow_ != other.otherConversionEventLookbackWindow_) return false;
    if (reportingAttributionModel_ != other.reportingAttributionModel_) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    hash = (37 * hash) + ACQUISITION_CONVERSION_EVENT_LOOKBACK_WINDOW_FIELD_NUMBER;
    hash = (53 * hash) + acquisitionConversionEventLookbackWindow_;
    hash = (37 * hash) + OTHER_CONVERSION_EVENT_LOOKBACK_WINDOW_FIELD_NUMBER;
    hash = (53 * hash) + otherConversionEventLookbackWindow_;
    hash = (37 * hash) + REPORTING_ATTRIBUTION_MODEL_FIELD_NUMBER;
    hash = (53 * hash) + reportingAttributionModel_;
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.analytics.admin.v1alpha.AttributionSettings parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.analytics.admin.v1alpha.AttributionSettings parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.analytics.admin.v1alpha.AttributionSettings parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.analytics.admin.v1alpha.AttributionSettings parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.analytics.admin.v1alpha.AttributionSettings parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.analytics.admin.v1alpha.AttributionSettings parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.analytics.admin.v1alpha.AttributionSettings parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.analytics.admin.v1alpha.AttributionSettings parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.analytics.admin.v1alpha.AttributionSettings parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.analytics.admin.v1alpha.AttributionSettings parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.analytics.admin.v1alpha.AttributionSettings parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.analytics.admin.v1alpha.AttributionSettings parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.analytics.admin.v1alpha.AttributionSettings prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * The attribution settings used for a given property. This is a singleton
   * resource.
   * </pre>
   *
   * Protobuf type {@code google.analytics.admin.v1alpha.AttributionSettings}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.analytics.admin.v1alpha.AttributionSettings)
      com.google.analytics.admin.v1alpha.AttributionSettingsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.analytics.admin.v1alpha.ResourcesProto.internal_static_google_analytics_admin_v1alpha_AttributionSettings_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.analytics.admin.v1alpha.ResourcesProto.internal_static_google_analytics_admin_v1alpha_AttributionSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.analytics.admin.v1alpha.AttributionSettings.class, com.google.analytics.admin.v1alpha.AttributionSettings.Builder.class);
    }

    // Construct using com.google.analytics.admin.v1alpha.AttributionSettings.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      name_ = "";

      acquisitionConversionEventLookbackWindow_ = 0;

      otherConversionEventLookbackWindow_ = 0;

      reportingAttributionModel_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.analytics.admin.v1alpha.ResourcesProto.internal_static_google_analytics_admin_v1alpha_AttributionSettings_descriptor;
    }

    @java.lang.Override
    public com.google.analytics.admin.v1alpha.AttributionSettings getDefaultInstanceForType() {
      return com.google.analytics.admin.v1alpha.AttributionSettings.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.analytics.admin.v1alpha.AttributionSettings build() {
      com.google.analytics.admin.v1alpha.AttributionSettings result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.analytics.admin.v1alpha.AttributionSettings buildPartial() {
      com.google.analytics.admin.v1alpha.AttributionSettings result = new com.google.analytics.admin.v1alpha.AttributionSettings(this);
      result.name_ = name_;
      result.acquisitionConversionEventLookbackWindow_ = acquisitionConversionEventLookbackWindow_;
      result.otherConversionEventLookbackWindow_ = otherConversionEventLookbackWindow_;
      result.reportingAttributionModel_ = reportingAttributionModel_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.analytics.admin.v1alpha.AttributionSettings) {
        return mergeFrom((com.google.analytics.admin.v1alpha.AttributionSettings)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.analytics.admin.v1alpha.AttributionSettings other) {
      if (other == com.google.analytics.admin.v1alpha.AttributionSettings.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      if (other.acquisitionConversionEventLookbackWindow_ != 0) {
        setAcquisitionConversionEventLookbackWindowValue(other.getAcquisitionConversionEventLookbackWindowValue());
      }
      if (other.otherConversionEventLookbackWindow_ != 0) {
        setOtherConversionEventLookbackWindowValue(other.getOtherConversionEventLookbackWindowValue());
      }
      if (other.reportingAttributionModel_ != 0) {
        setReportingAttributionModelValue(other.getReportingAttributionModelValue());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.analytics.admin.v1alpha.AttributionSettings parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.analytics.admin.v1alpha.AttributionSettings) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * Output only. Resource name of this attribution settings resource.
     * Format: properties/{property_id}/attributionSettings
     * Example: "properties/1000/attributionSettings"
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Output only. Resource name of this attribution settings resource.
     * Format: properties/{property_id}/attributionSettings
     * Example: "properties/1000/attributionSettings"
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Output only. Resource name of this attribution settings resource.
     * Format: properties/{property_id}/attributionSettings
     * Example: "properties/1000/attributionSettings"
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Output only. Resource name of this attribution settings resource.
     * Format: properties/{property_id}/attributionSettings
     * Example: "properties/1000/attributionSettings"
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      
      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Output only. Resource name of this attribution settings resource.
     * Format: properties/{property_id}/attributionSettings
     * Example: "properties/1000/attributionSettings"
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value;
      onChanged();
      return this;
    }

    private int acquisitionConversionEventLookbackWindow_ = 0;
    /**
     * <pre>
     * Required. The lookback window configuration for acquisition conversion events.
     * The default window size is 30 days.
     * </pre>
     *
     * <code>.google.analytics.admin.v1alpha.AttributionSettings.AcquisitionConversionEventLookbackWindow acquisition_conversion_event_lookback_window = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The enum numeric value on the wire for acquisitionConversionEventLookbackWindow.
     */
    @java.lang.Override public int getAcquisitionConversionEventLookbackWindowValue() {
      return acquisitionConversionEventLookbackWindow_;
    }
    /**
     * <pre>
     * Required. The lookback window configuration for acquisition conversion events.
     * The default window size is 30 days.
     * </pre>
     *
     * <code>.google.analytics.admin.v1alpha.AttributionSettings.AcquisitionConversionEventLookbackWindow acquisition_conversion_event_lookback_window = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The enum numeric value on the wire for acquisitionConversionEventLookbackWindow to set.
     * @return This builder for chaining.
     */
    public Builder setAcquisitionConversionEventLookbackWindowValue(int value) {
      
      acquisitionConversionEventLookbackWindow_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The lookback window configuration for acquisition conversion events.
     * The default window size is 30 days.
     * </pre>
     *
     * <code>.google.analytics.admin.v1alpha.AttributionSettings.AcquisitionConversionEventLookbackWindow acquisition_conversion_event_lookback_window = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The acquisitionConversionEventLookbackWindow.
     */
    @java.lang.Override
    public com.google.analytics.admin.v1alpha.AttributionSettings.AcquisitionConversionEventLookbackWindow getAcquisitionConversionEventLookbackWindow() {
      @SuppressWarnings("deprecation")
      com.google.analytics.admin.v1alpha.AttributionSettings.AcquisitionConversionEventLookbackWindow result = com.google.analytics.admin.v1alpha.AttributionSettings.AcquisitionConversionEventLookbackWindow.valueOf(acquisitionConversionEventLookbackWindow_);
      return result == null ? com.google.analytics.admin.v1alpha.AttributionSettings.AcquisitionConversionEventLookbackWindow.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Required. The lookback window configuration for acquisition conversion events.
     * The default window size is 30 days.
     * </pre>
     *
     * <code>.google.analytics.admin.v1alpha.AttributionSettings.AcquisitionConversionEventLookbackWindow acquisition_conversion_event_lookback_window = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The acquisitionConversionEventLookbackWindow to set.
     * @return This builder for chaining.
     */
    public Builder setAcquisitionConversionEventLookbackWindow(com.google.analytics.admin.v1alpha.AttributionSettings.AcquisitionConversionEventLookbackWindow value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      acquisitionConversionEventLookbackWindow_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The lookback window configuration for acquisition conversion events.
     * The default window size is 30 days.
     * </pre>
     *
     * <code>.google.analytics.admin.v1alpha.AttributionSettings.AcquisitionConversionEventLookbackWindow acquisition_conversion_event_lookback_window = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return This builder for chaining.
     */
    public Builder clearAcquisitionConversionEventLookbackWindow() {
      
      acquisitionConversionEventLookbackWindow_ = 0;
      onChanged();
      return this;
    }

    private int otherConversionEventLookbackWindow_ = 0;
    /**
     * <pre>
     * Required. The lookback window for all other, non-acquisition conversion events.
     * The default window size is 90 days.
     * </pre>
     *
     * <code>.google.analytics.admin.v1alpha.AttributionSettings.OtherConversionEventLookbackWindow other_conversion_event_lookback_window = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The enum numeric value on the wire for otherConversionEventLookbackWindow.
     */
    @java.lang.Override public int getOtherConversionEventLookbackWindowValue() {
      return otherConversionEventLookbackWindow_;
    }
    /**
     * <pre>
     * Required. The lookback window for all other, non-acquisition conversion events.
     * The default window size is 90 days.
     * </pre>
     *
     * <code>.google.analytics.admin.v1alpha.AttributionSettings.OtherConversionEventLookbackWindow other_conversion_event_lookback_window = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The enum numeric value on the wire for otherConversionEventLookbackWindow to set.
     * @return This builder for chaining.
     */
    public Builder setOtherConversionEventLookbackWindowValue(int value) {
      
      otherConversionEventLookbackWindow_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The lookback window for all other, non-acquisition conversion events.
     * The default window size is 90 days.
     * </pre>
     *
     * <code>.google.analytics.admin.v1alpha.AttributionSettings.OtherConversionEventLookbackWindow other_conversion_event_lookback_window = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The otherConversionEventLookbackWindow.
     */
    @java.lang.Override
    public com.google.analytics.admin.v1alpha.AttributionSettings.OtherConversionEventLookbackWindow getOtherConversionEventLookbackWindow() {
      @SuppressWarnings("deprecation")
      com.google.analytics.admin.v1alpha.AttributionSettings.OtherConversionEventLookbackWindow result = com.google.analytics.admin.v1alpha.AttributionSettings.OtherConversionEventLookbackWindow.valueOf(otherConversionEventLookbackWindow_);
      return result == null ? com.google.analytics.admin.v1alpha.AttributionSettings.OtherConversionEventLookbackWindow.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Required. The lookback window for all other, non-acquisition conversion events.
     * The default window size is 90 days.
     * </pre>
     *
     * <code>.google.analytics.admin.v1alpha.AttributionSettings.OtherConversionEventLookbackWindow other_conversion_event_lookback_window = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The otherConversionEventLookbackWindow to set.
     * @return This builder for chaining.
     */
    public Builder setOtherConversionEventLookbackWindow(com.google.analytics.admin.v1alpha.AttributionSettings.OtherConversionEventLookbackWindow value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      otherConversionEventLookbackWindow_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The lookback window for all other, non-acquisition conversion events.
     * The default window size is 90 days.
     * </pre>
     *
     * <code>.google.analytics.admin.v1alpha.AttributionSettings.OtherConversionEventLookbackWindow other_conversion_event_lookback_window = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return This builder for chaining.
     */
    public Builder clearOtherConversionEventLookbackWindow() {
      
      otherConversionEventLookbackWindow_ = 0;
      onChanged();
      return this;
    }

    private int reportingAttributionModel_ = 0;
    /**
     * <pre>
     * Required. The reporting attribution model used to calculate conversion credit in this
     * property's reports.
     * Changing the attribution model will apply to both historical and future
     * data. These changes will be reflected in reports with conversion and
     * revenue data. User and session data will be unaffected.
     * </pre>
     *
     * <code>.google.analytics.admin.v1alpha.AttributionSettings.ReportingAttributionModel reporting_attribution_model = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The enum numeric value on the wire for reportingAttributionModel.
     */
    @java.lang.Override public int getReportingAttributionModelValue() {
      return reportingAttributionModel_;
    }
    /**
     * <pre>
     * Required. The reporting attribution model used to calculate conversion credit in this
     * property's reports.
     * Changing the attribution model will apply to both historical and future
     * data. These changes will be reflected in reports with conversion and
     * revenue data. User and session data will be unaffected.
     * </pre>
     *
     * <code>.google.analytics.admin.v1alpha.AttributionSettings.ReportingAttributionModel reporting_attribution_model = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The enum numeric value on the wire for reportingAttributionModel to set.
     * @return This builder for chaining.
     */
    public Builder setReportingAttributionModelValue(int value) {
      
      reportingAttributionModel_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The reporting attribution model used to calculate conversion credit in this
     * property's reports.
     * Changing the attribution model will apply to both historical and future
     * data. These changes will be reflected in reports with conversion and
     * revenue data. User and session data will be unaffected.
     * </pre>
     *
     * <code>.google.analytics.admin.v1alpha.AttributionSettings.ReportingAttributionModel reporting_attribution_model = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The reportingAttributionModel.
     */
    @java.lang.Override
    public com.google.analytics.admin.v1alpha.AttributionSettings.ReportingAttributionModel getReportingAttributionModel() {
      @SuppressWarnings("deprecation")
      com.google.analytics.admin.v1alpha.AttributionSettings.ReportingAttributionModel result = com.google.analytics.admin.v1alpha.AttributionSettings.ReportingAttributionModel.valueOf(reportingAttributionModel_);
      return result == null ? com.google.analytics.admin.v1alpha.AttributionSettings.ReportingAttributionModel.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Required. The reporting attribution model used to calculate conversion credit in this
     * property's reports.
     * Changing the attribution model will apply to both historical and future
     * data. These changes will be reflected in reports with conversion and
     * revenue data. User and session data will be unaffected.
     * </pre>
     *
     * <code>.google.analytics.admin.v1alpha.AttributionSettings.ReportingAttributionModel reporting_attribution_model = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The reportingAttributionModel to set.
     * @return This builder for chaining.
     */
    public Builder setReportingAttributionModel(com.google.analytics.admin.v1alpha.AttributionSettings.ReportingAttributionModel value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      reportingAttributionModel_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The reporting attribution model used to calculate conversion credit in this
     * property's reports.
     * Changing the attribution model will apply to both historical and future
     * data. These changes will be reflected in reports with conversion and
     * revenue data. User and session data will be unaffected.
     * </pre>
     *
     * <code>.google.analytics.admin.v1alpha.AttributionSettings.ReportingAttributionModel reporting_attribution_model = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return This builder for chaining.
     */
    public Builder clearReportingAttributionModel() {
      
      reportingAttributionModel_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.analytics.admin.v1alpha.AttributionSettings)
  }

  // @@protoc_insertion_point(class_scope:google.analytics.admin.v1alpha.AttributionSettings)
  private static final com.google.analytics.admin.v1alpha.AttributionSettings DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.analytics.admin.v1alpha.AttributionSettings();
  }

  public static com.google.analytics.admin.v1alpha.AttributionSettings getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AttributionSettings>
      PARSER = new com.google.protobuf.AbstractParser<AttributionSettings>() {
    @java.lang.Override
    public AttributionSettings parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new AttributionSettings(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<AttributionSettings> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AttributionSettings> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.analytics.admin.v1alpha.AttributionSettings getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

